<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.admin.mapper.AdminMapper">
    <resultMap id="BaseResultMap" type="com.ssm.admin.bean.Admin">
        <result column="admin_id" jdbcType="INTEGER" property="adminId"/>
        <result column="admin_code" jdbcType="VARCHAR" property="adminCode"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="enrolldate" jdbcType="TIMESTAMP" property="enrolldate"/>
    </resultMap>


    <insert id="addAdminSelect" parameterType="com.ssm.admin.bean.Admin">
        insert into admin_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="adminId != null">
                admin_id,
            </if>
            <if test="adminCode != null">
                admin_code,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="enrolldate != null">
                enrolldate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="adminId != null">
                #{adminId,jdbcType=INTEGER},
            </if>
            <if test="adminCode != null">
                #{adminCode,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="enrolldate != null">
                #{enrolldate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>


    <insert id="addAdmin_Role">
        INSERT INTO admin_role (admin_id, role_id)
        VALUES (#{arg0}, #{arg1})
    </insert>


    <delete id="deleteAdmin">
        DELETE FROM admin_info
        WHERE admin_id = #{adminId}
    </delete>


    <delete id="deleteAdmin_Role">
        DELETE FROM admin_role
        WHERE admin_id = #{arg0} AND role_id = #{arg1}
    </delete>


    <update id="resetPwd">

    </update>


    <update id="editAdminInfo">
        UPDATE admin_info
        <set>
            <if test=" adminCode!=null and adminCode!='' ">
                admin_code = #{adminCode},
            </if>
            <if test=" password!=null and password!='' ">
                password = #{password},
            </if>
            <if test=" name!=null and name!='' ">
                name = #{name},
            </if>
            <if test=" telephone!=null and telephone!='' ">
                telephone = #{telephone},
            </if>
            <if test=" email!=null and email!='' ">
                email = #{email},
            </if>
            <if test=" enrolldate!=null and enrolldate!='' ">
                enrolldate = #{enrolldate},
            </if>
        </set>
        WHERE admin_id = #{adminId}
    </update>


    <select id="findLastAdmin" resultMap="BaseResultMap">
        SELECT admin_id
        FROM admin_info
        ORDER BY admin_id DESC
        LIMIT 1
    </select>


    <select id="findAdminByAdminId" resultMap="BaseResultMap">
        SELECT
            a.admin_code,
            a.name,
            a.telephone,
            a.email
        FROM admin_info a
        WHERE admin_id = #{adminId}
    </select>


    <select id="findAdminsInAdminIds" resultMap="BaseResultMap">
        SELECT * FROM admin_info
        <where>
            <if test=" list!=null and list.size>0 ">
                <foreach collection="list" index="index" item="adminId" open=" admin_id IN (" close=")" separator=",">
                    #{adminId}
                </foreach>
            </if>
        </where>
    </select>


    <select id="findAdminsBySelected" resultMap="BaseResultMap">
        SELECT *
        FROM admin_info
        <where>
            <if test=" adminId!=null and adminId!='' ">
                AND admin_id = #{adminId},
            </if>
            <if test=" adminCode!=null and adminCode!='' ">
                AND admin_code = #{adminCode},
            </if>
            <if test=" password!=null and password!='' ">
                AND password = #{password},
            </if>
            <if test=" name!=null and name!='' ">
                AND name = #{name},
            </if>
            <if test=" telephone!=null and telephone!='' ">
                AND telephone = #{telephone},
            </if>
            <if test=" email!=null and email!='' ">
                AND email = #{email}
            </if>
        </where>
    </select>


    <select id="findAdminByAdminCode" resultMap="BaseResultMap">
        SELECT *
        FROM admin_info
        WHERE admin_code = #{adminCode}
    </select>


    <select id="findAdminIdByRoleIdModuleId" resultMap="BaseResultMap">
        SELECT a.admin_id
        FROM admin_info a
        LEFT JOIN admin_role ar ON a.admin_id = ar.admin_id
        LEFT JOIN role_module rm ON ar.role_id = rm.role_id
        <where>
            <if test=" list!=null and list.size>0 ">
                <foreach collection="list" index="index" item="roleId" open=" ar.role_id IN (" close=")" separator=",">
                    #{roleId}
                </foreach>
            </if>
            <if test=" moduleId!='' and moduleId!=null ">
                AND rm.module_id=#{moduleId}
            </if>
        </where>
    </select>


    <select id="findad_rByAdminIdRoleId" resultType="Integer">
        SELECT count(*)
        FROM admin_role ar LEFT JOIN admin_info a ON a.admin_id = ar.admin_id
        WHERE a.admin_id = #{arg0} AND ar.role_id = #{arg1}
    </select>

</mapper>